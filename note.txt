react project는 npx create-react-app을 통해 생성가능
babel, webpack이 다 내장되어있음

npx create-react-app 프로젝트명

git init
git add .
git remote add origin url
git commit -m "txt"
git push origin master

react는 virtual dom을 사용해서 빠르다.
html 로드 후 element에 넣어주는 형식

react는 jsx를 사용한다.
component는 html을 반환하는 함수이다.
react application은 한번에 하나의 component만 rendering 할수있다.

상위component에서 하위component로 props(property)를 전달할 수 있다.
react masic을 사용하여 전달한 props를 사용한다.

map

const arr = ["aa", "bb", "cc", "dd"]

arr.map((alpha) => {
    return alpha + "★"
})

["aa★", "bb★", "cc★", "dd★"]

npm i prop-types
내가 전달받은 props가 내가 원하는 props인지 확인해주는것
Food.propTypes = {
  name: PropTypes.string.isRequired,
  picture: PropTypes.string.isRequired,
  rating: PropTypes.number
};

class react component는 function이 아니기 때문에 return을 가지고 있지 않다.
react는 자동적으로 class component의 render method를 실행한다.

class component를 사용하는 이유는 state를 쓰기 위해서이다.

setState를 호출할때마다 react는 새로운 state와 함께 render function을 호출한다.
setState를 사용하지 않으면 새 state와 함께 render function이 호출되지 않는다.
setState를 사용하지 않고 직접 바꾸면 render function이 호출안됨.

Component Life Cycle

mounting
component가 mount될때, component가 screen에 표시될때 component가 너의 website에 갈때
constructor를 호출한다.
component가 render할때 componentDidMount를 호출한다.

upadting
add, minus버튼을 클릭해서 state를 변경할때, 그게 바로 updating이다.
setState를 호출하면,
render을 호출 한 다음 업데이트가 완료되면 componentDidUpdate가 실행된다.

unmounting
componentWillUnmount 페이지를 떠나거나 다른 페이지로 갈때 호출

componentDidMount에서 data를 fetch할 예정

state가 없다면 class component가 아니라 function component를 사용해도 된다.

genres: PropTypes.arrayOf(PropTypes.string).isRequired
//  arrayOf는 PropTypes에서 제공하는 함수, 해상 PropTypes로 구성된 배열

gh page에 올리기
npm i gh-pages

package.json에서 "homepage": "https://dispellizer.github.io/movie_app/" 입력
script부분 작성하기
"deploy": "gh-pages -d build",
"predeploy": "npm run build"
predeploy는 deploy를 입력하면 알아서 실행됨

파일을 수정하면 다시 npm start deploy 해줘야함

npm i react-router-dom

<HashRouter>
  <Navigation />
  <Route path="/" exact={true} component={Home} />
  <Route path="/about" component={About} />
</HashRouter>
exact는 이거 아니면 랜더링 안한다는 의미

<Link to="/">Home</Link>
<Link to="/about">About</Link>
<a href="/">Home</a>를 spa 사용을 위해 Link로 해줌
route의 path와 같아야 한다.

Link를 사용할려면 router 안에 넣어야 된다.
HashRouter를 사용하면 주소에#가 생기지만, BrowserRouter를 사용하면 없다.
BrowserRouter를 쓰면 gh-pages에 업로드할때 귀찮아진다.

route가 기본적으로 보내주는 props가 있다.
history, location, math, staticContext
    <Link
      to={{
        pathname: "/movie-detail",
        state: {
          year,
          title,
          summary,
          poster,
          genres
        }
      }}
    >
위와 같은식으로 link to object가 가능(obj를 넣어줄수도 있다.)
location에서 state 확인 가능

movie-detail을 link를 통해서 들어가지 않고 url로 들어가면 state가 undifined됨